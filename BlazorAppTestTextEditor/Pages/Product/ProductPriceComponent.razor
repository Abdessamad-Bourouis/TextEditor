@page "/product/price/{Id:int}"
@inject IProductRepository _productRepository
@inject IProductPriceRepository _productPriceRepository

<h3 class="card-title text-primary mb-3 ml-3">Product Price Management</h3>
@if (IsLoading)
{
        <div class="text-center">
            <h3>Loading...</h3>
        </div>
}
else
{
<div class="row border p-2 mb-4">
    <div class="col-11">
        <div class="card-body">
            <h4>@Product.Name</h4>
            <span>Category : @Product.Category.Name</span><br/>
                description : <div>
                    @((MarkupString)Product.Description)
                </div>
        </div>
    </div>
    <div class="col-1">
        <img src="@Product.ImageUrl" class="w-100">
    </div>
</div>
}
@code {
    [Parameter] 
    public int Id { get; set; } 

    private ProductDTO Product { get; set; } = new();
    private List<ProductPriceDTO> ProductPrices { get; set; } = new List<ProductPriceDTO>();
    private bool IsLoading { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoading=true;
            StateHasChanged();
            Product = await _productRepository.GetById(Id);
            ProductPrices = await _productPriceRepository.GetAll(Id);
            IsLoading = false;
            StateHasChanged();
        }
    }
}